/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.apoorv;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Apoorv
 */
public class _Reporting_Results extends javax.swing.JFrame {
    Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;JTable table;
    public _Reporting_Results() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("mining_data?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        resultsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery.getResultList();
        loginQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM Login l");
        loginList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : loginQuery.getResultList();
        resultsQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery1.getResultList();
        resultsQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery2.getResultList();
        loginQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM Login l");
        loginList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : loginQuery1.getResultList();
        resultsQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery3.getResultList();
        resultsQuery4 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery4.getResultList();
        resultsQuery5 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery5.getResultList();
        resultsQuery6 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Results r");
        resultsList6 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : resultsQuery6.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, resultsList6, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${website}"));
        columnBinding.setColumnName("Website");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${suspiciousWords}"));
        columnBinding.setColumnName("Suspicious Words");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalWords}"));
        columnBinding.setColumnName("Total Words");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${average}"));
        columnBinding.setColumnName("Average");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
            int row= jTable1.getSelectedRow();
            String table_click= jTable1.getModel().getValueAt(row, 0).toString();
            try{
            con=Connect.ConnectDB();
            String sql= "select * from word_found where id = '" + table_click + "'";
            pst=con.prepareStatement(sql);
            rs=  pst.executeQuery();
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this,ex);
            } 
             
            try {
                table = new JTable(buildTableModel(rs));
                // Closes the Connection
            } catch (SQLException ex) {
                Logger.getLogger(_Reporting_Results.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(null, new JScrollPane(table));
            
    }//GEN-LAST:event_jTable1MouseClicked
    public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

    ResultSetMetaData metaData = rs.getMetaData();

    // names of columns
    Vector<String> columnNames = new Vector<String>();
    int columnCount = metaData.getColumnCount();
    for (int column = 1; column <= columnCount; column++) {
        columnNames.add(metaData.getColumnName(column));
    }

    // data of the table
    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
    while (rs.next()) {
        Vector<Object> vector = new Vector<Object>();
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
            vector.add(rs.getObject(columnIndex));
        }
        data.add(vector);
    }

    return new DefaultTableModel(data, columnNames);

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(_Reporting_Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(_Reporting_Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(_Reporting_Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(_Reporting_Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new _Reporting_Results().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.util.List<com.apoorv.Login> loginList;
    private java.util.List<com.apoorv.Login> loginList1;
    private javax.persistence.Query loginQuery;
    private javax.persistence.Query loginQuery1;
    private java.util.List<com.apoorv.Results> resultsList;
    private java.util.List<com.apoorv.Results> resultsList1;
    private java.util.List<com.apoorv.Results> resultsList2;
    private java.util.List<com.apoorv.Results> resultsList3;
    private java.util.List<com.apoorv.Results> resultsList4;
    private java.util.List<com.apoorv.Results> resultsList5;
    private java.util.List<com.apoorv.Results> resultsList6;
    private javax.persistence.Query resultsQuery;
    private javax.persistence.Query resultsQuery1;
    private javax.persistence.Query resultsQuery2;
    private javax.persistence.Query resultsQuery3;
    private javax.persistence.Query resultsQuery4;
    private javax.persistence.Query resultsQuery5;
    private javax.persistence.Query resultsQuery6;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

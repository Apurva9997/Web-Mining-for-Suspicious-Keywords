/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.apoorv;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author Apoorv
 */
public class web_mining extends javax.swing.JFrame {
    Connection con=null;
    ResultSet rs=null;ResultSet rs1=null;ResultSet rs2=null;ResultSet rs3=null;ResultSet rs4=null;
    PreparedStatement pst=null;
    String filename;int id;
    /**
     * Creates new form web_mining
     */
    public web_mining() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Web Mining"));

        jLabel1.setText("Enter website Link");

        jTextField1.setColumns(20);

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(354, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addContainerGap(310, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        
//C:/Users/hp/Desktop/article1.html
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        System.out.println("function called"); 
        int c1_words=0,c2_words=0,c3_words=0,c4_words=0;
        try{
            System.out.println("inside 1st try"); 
            con=Connect.ConnectDB();
            if (jTextField1.getText().equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter File Name Correctly","Error", JOptionPane.ERROR_MESSAGE);
                return;

            }
        int count;StringTokenizer tokenizer;String line,token;int word_count=0;
        int suspicious_words=0;double average=0;
		BufferedReader input = null;
        System.out.println("label0");   
        filename=jTextField1.getText();
        
        Preprocessing prep=new Preprocessing(filename);
        prep.preprocess();
        input = new BufferedReader(new FileReader("output.txt"));
        line = input.readLine(); //when printed gives first line in file
			//outer while (process lines)
            try{
            String sql898="select * from results where website= '" +filename+"'";
            pst=con.prepareStatement(sql898);
            rs=pst.executeQuery();
            if(!rs.next()){
                        String sql= "insert into results(website,total_words,suspicious_words,average)values(?,?,?,?)";
                        System.out.println("result is empty filling in");
                        System.out.println("label1");
                        System.out.println(sql);
                        try{
                        pst=con.prepareStatement(sql);
                        pst.setString(1, filename);pst.setInt(2, 0);pst.setInt(3, 0);pst.setDouble(4, 0);
                        pst.execute();
                        sql898="select * from results where website= '" +filename+"'";
                        System.out.println(sql898);
                        pst=con.prepareStatement(sql898);
                        rs=pst.executeQuery();
                        }
                        catch(SQLException | HeadlessException e){
                            JOptionPane.showMessageDialog(null, e); 
          
                          }
                        rs.next();
                        id=Integer.parseInt(rs.getString(1));
			while(line != null){
			tokenizer = new StringTokenizer(line, " ");
                        count=tokenizer.countTokens();
                        word_count+=count;
                        
                        while(tokenizer.hasMoreTokens()){
                        //++word_count;
                        String temp=tokenizer.nextToken();
                        System.out.println(temp);
                        String c1,c2,c3,c4;c1="Adult";c2="Terrorism";c3="Religious";c4="Others";
                        String sql2="select * from suspicious_words where word= '" +temp+"' and category='"+c1+"'";
                        String sql22="select * from suspicious_words where word= '" +temp+"' and category='"+c2+"'";
                        String sql23="select * from suspicious_words where word= '" +temp+"' and category='"+c3+"'";
                        String sql24="select * from suspicious_words where word= '" +temp+"' and category='"+c4+"'";
                        System.out.println("entering 2nd try");
                        try{
                            System.out.println("entered try");
                        pst=con.prepareStatement(sql2,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                        System.out.println(sql2);
                        rs=pst.executeQuery();
                        pst=con.prepareStatement(sql22,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                        rs2=pst.executeQuery();
                        pst=con.prepareStatement(sql23,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                        rs3=pst.executeQuery();
                        pst=con.prepareStatement(sql24,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                        rs4=pst.executeQuery();
                        System.out.println("check check");
                        System.out.println(rs.first());
                        System.out.println("check check 2");
                        System.out.println(rs2.first());
                        System.out.println(rs3.first());
                        System.out.println(rs4.first());
                        if(rs.first()){
                        System.out.println(rs.getString(2));
                        System.out.println(rs.getString(3));
                        rs.beforeFirst();
                        rs.next();
                        System.out.println("first if");
                        String word=rs.getString(2);
                        String category=rs.getString(3);
                            String sql25= "insert into word_found(id,word,category)values(?,?,?)";
                            pst=con.prepareStatement(sql25);
                            pst.setInt(1, id);pst.setString(2, word);pst.setString(3, category);
                            pst.execute();
                            ++c1_words;
                            //++suspicious_words;
                        }
                        if(rs2.first()){
                            System.out.println(rs2.getString(2));
                        System.out.println(rs2.getString(3));
                        rs2.beforeFirst();
                        rs2.next();
                        System.out.println("second if");
                        String word=rs2.getString(2);
                        String category=rs2.getString(3);
                            String sql25= "insert into word_found(id,word,category)values(?,?,?)";
                            pst=con.prepareStatement(sql25);
                            pst.setInt(1, id);pst.setString(2, word);pst.setString(3, category);
                            pst.execute();
                            ++c2_words;
                        }
                        if(rs3.first()){
                            System.out.println(rs3.getString(2));
                        System.out.println(rs3.getString(3));
                        rs3.beforeFirst();
                        rs3.next();
                        System.out.println("third if");
                        String word=rs3.getString(2);
                        String category=rs3.getString(3);
                            String sql25= "insert into word_found(id,word,category)values(?,?,?)";
                            pst=con.prepareStatement(sql25);
                            pst.setInt(1, id);pst.setString(2, word);pst.setString(3, category);
                            pst.execute();
                            ++c3_words;
                        }
                        if(rs4.first()){
                            System.out.println(rs4.getString(2));
                        System.out.println(rs4.getString(3));
                        rs4.beforeFirst();
                        rs4.next();
                        System.out.println("forth if");
                        String word=rs4.getString(2);
                        String category=rs4.getString(3);
                            String sql25= "insert into word_found(id,word,category)values(?,?,?)";
                            pst=con.prepareStatement(sql25);
                            pst.setInt(1, id);pst.setString(2, word);pst.setString(3, category);
                            pst.execute();
                            ++c4_words;
                        }
                        }
                        catch(SQLException | HeadlessException e){
                            System.out.println("here heyy");
                            JOptionPane.showMessageDialog(null, e); 
                        }
                        System.out.println(c1_words);
                        System.out.println(c2_words);
                        System.out.println(c3_words);
                        System.out.println(c4_words);
                        //PieChartExample pex=new PieChartExample(c1_words,c2_words,c3_words,c4_words);
                        }//pex.start(null);
			line = input.readLine();
                        } //next line
                        //PieChartCustomLegend pie=new PieChartCustomLegend(c1_words,c2_words,c3_words,c4_words);
                        //Application.launch(PieChartCustomLegend.class);
                        /*try {
                            pie.init();
                        } catch (Exception ex) {
                            Logger.getLogger(web_mining.class.getName()).log(Level.SEVERE, null, ex);
                        }*/
                        presaving p=new presaving(c1_words,c2_words,c3_words,c4_words);
                        p.presave();
                        suspicious_words+=c1_words+c2_words+c3_words+c4_words;System.out.println(suspicious_words);
                        average=((double)suspicious_words/(double)word_count)*100.0;
                        System.out.println("Total number of words are :"+word_count);
                        sql= "UPDATE `results` SET `website`=?,`total_words`=?,`suspicious_words`=?,`average`=? where id=?";
            System.out.println("label1");
                        try{
            pst=con.prepareStatement(sql);
            pst.setString(1, filename);pst.setInt(2, word_count);pst.setInt(3, suspicious_words);pst.setDouble(4, average);pst.setInt(5, id);
            pst.execute();
            System.out.println("label2");
            JOptionPane.showMessageDialog(this,"Generating results","Result",JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            _Reporting_Results reres=new _Reporting_Results();
            reres.setVisible(true);
            if(((double)c1_words/(double)suspicious_words)*100.0>30.0){
            JOptionPane.showMessageDialog(this,"Possibly Adult website parental supervision required","Inference",JOptionPane.INFORMATION_MESSAGE);
            }
            else if(((double)c2_words/(double)suspicious_words)*100.0>30.0){
            JOptionPane.showMessageDialog(this,"Terrorism related not for chidren below 13","Inference",JOptionPane.INFORMATION_MESSAGE);
            }
            else if(((double)c3_words/(double)suspicious_words)*100.0>30.0){
            JOptionPane.showMessageDialog(this,"Religious abuse do not prceed","Inference",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this,"The website doesn't seem to have anything wrong you can proceed","Inference",JOptionPane.INFORMATION_MESSAGE);
            }
            PieChartCustomLegend.main(null);
            
                        }
                        catch(SQLException | HeadlessException e){
                            JOptionPane.showMessageDialog(null, e); 
          
                          }
                        
//close outer while
                        //System.out.println("Coming here");
}else{
           System.out.println("hurray we are in else");
           id=Integer.parseInt(rs.getString(1));
          JOptionPane.showMessageDialog(this,"Data for this file already exists","Error",JOptionPane.ERROR_MESSAGE);
          int dialogButton = JOptionPane.YES_NO_OPTION;
int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to delete earlier records and try again", "Delete previous Records", dialogButton);
if(dialogResult == 1) {
  this.setVisible(false);
} else {
  try{
      
      System.out.println("hurray we are here");
      String sql7850="delete from results where id = ?";                      
      pst=con.prepareStatement(sql7850);
      pst.setInt(1, id);
      System.out.println("hurray we are here2");
                        pst.execute();
                        String sql78="DELETE FROM word_found WHERE id = ?";                      
      pst=con.prepareStatement(sql78);
      System.out.println("hurray we are here3");
      pst.setInt(1, id);
                        pst.execute();
                        JOptionPane.showMessageDialog(this,"Deletion is completed, try resubmiting your query again","Deletion Completed",JOptionPane.INFORMATION_MESSAGE);
  }
                        catch(SQLException | HeadlessException e){
                            JOptionPane.showMessageDialog(null, e); 
          
                          }
}
            }
                        }
                        catch(SQLException | HeadlessException e){
                            JOptionPane.showMessageDialog(null, e); 
          
                          }}catch (FileNotFoundException e) {
    System.out.println("Unable to open file " + filename);
} catch (IOException e) {
    System.out.println("Unable to read from file " + filename);
}

  
    // Close the file
    
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(web_mining.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(web_mining.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(web_mining.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(web_mining.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new web_mining().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
